#test1
name: Chapi Application and Infrastructure Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - '*'
  push:
    branches:
      - 'develop'
      - 'main'

permissions:
  id-token: write  # Granting id-token permission to the nested workflow
  contents: read

jobs:
  determine_commit_sha:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Determine commit SHA
        id: get-sha
        run: |
          pwd
          ls -al
          ls -l ./.github/workflows/
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_HEAD_SHA=$(git rev-parse ${{ github.event.pull_request.head.sha }})
            echo "COMMIT_SHA=$PR_HEAD_SHA" >> $GITHUB_OUTPUT
          else
            MERGE_COMMIT_SHA=$(git rev-parse ${{ github.sha }})
            echo "COMMIT_SHA=$MERGE_COMMIT_SHA" >> $GITHUB_OUTPUT
          fi
    outputs:
      COMMIT_SHA: ${{ steps.get-sha.outputs.COMMIT_SHA }}
  dev_app_deploy:
    needs: determine_commit_sha
    uses: ./.github/workflows/app-deploy.yml
    with:
      git_project: sgopishetty/terragrunt
      git_ref: ${{ github.ref }}
      commit_id: ${{ needs.determine_commit_sha.outputs.COMMIT_SHA }}
      ecr_repository: flaskapp
  dev_terragrunt_deploy:
    needs: [determine_commit_sha, dev_app_deploy]
    uses: ./.github/workflows/terragrunt-deploy.yml
    with:
      git_project: sgopishetty/terragrunt
      git_ref: ${{ github.ref }}
      terragrunt_dir: ./resources/us-east-1/dev
      commit_id: ${{ needs.determine_commit_sha.outputs.COMMIT_SHA }}
  manual_approval:
    runs-on: ubuntu-latest
    needs: dev_terragrunt_deploy
    steps:
      - name: Request manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: sgopishetty  # Replace with GitHub usernames of approvers
          # Optionally, set timeout in minutes (e.g., timeout-minutes: 30)
  uat_app_deploy:
    needs: ["determine_commit_sha","manual_approval"]
    uses: ./.github/workflows/app-deploy.yml
    with:
      git_project: sgopishetty/terragrunt
      git_ref: ${{ github.ref }}
      commit_id: ${{ needs.determine_commit_sha.outputs.COMMIT_SHA }}
      ecr_repository: flaskappuat
  uat_terragrunt_deploy:
    needs: [determine_commit_sha, dev_app_deploy]
    uses: ./.github/workflows/terragrunt-deploy.yml
    with:
      git_project: sgopishetty/terragrunt
      git_ref: ${{ github.ref }}
      terragrunt_dir: ./resources/us-east-1/uat
      commit_id: ${{ needs.determine_commit_sha.outputs.COMMIT_SHA }}